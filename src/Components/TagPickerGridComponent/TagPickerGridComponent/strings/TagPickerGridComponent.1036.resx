<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TagPickerGridComponent_Display_Key" xml:space="preserve">
    <value>Composant de grille de sélecteur d'étiquettes</value>
    <comment>Nom d'affichage du composant de grille de sélecteur d'étiquettes</comment>
  </data>
  <data name="TagPickerGridComponent_Desc_Key" xml:space="preserve">
    <value>Permet à l'utilisateur de sélectionner plusieurs items et des afficher à l'aide d'étiquettes</value>
    <comment>Texte d'affichage de la description du composant de grille de sélecteur d'étiquettes</comment>
  </data>
  <data name="tagData_Display_Key" xml:space="preserve">
    <value>Information d'étiquettes</value>
    <comment>Texte d'affichage de l'information d'étiquettes</comment>
  </data>
  <data name="relatedEntity_Display_Key" xml:space="preserve">
    <value>Entité liée</value>
    <comment>Texte d'affichage de l'entité liée</comment>
  </data>
  <data name="relatedEntity_Desc_Key" xml:space="preserve">
    <value>Nom logique de l'entité liée</value>
    <comment>Texte d'affichage de la description de l'entité liée</comment>
  </data>
  <data name="relationshipName_Display_Key" xml:space="preserve">
    <value>Nom de la relation</value>
    <comment>Texte d'affichage pour le nom de la relation</comment>
  </data>
  <data name="relationshipName_Desc_Key" xml:space="preserve">
    <value>Nom de la relation entre l'entité primaire et l'entité liée</value>
    <comment>Texte d'affichage poue la description du nom de la relation</comment>
  </data>
  <data name="relationshipEntity_Display_Key" xml:space="preserve">
    <value>Nom d'entité de relation</value>
    <comment>Texte d'affichage du nom d'entité de relation</comment>
  </data>
  <data name="relationshipEntity_Desc_Key" xml:space="preserve">
    <value>Nom logique de l'entité de relation</value>
    <comment>Texte d'affichage de la description du nom logique de l'entité de relation</comment>
  </data>
  <data name="labelText_Display_Key" xml:space="preserve">
    <value>Étiquette de champ</value>
    <comment>Texte d'affichage de l'étiquette de champ</comment>
  </data>
  <data name="labelText_Desc_Key" xml:space="preserve">
    <value>Étiquette de champ qui sera afficher sur le formulaire</value>
    <comment>Texte d'affichage de la description de l'étiquette de champ</comment>
  </data>
  <data name="filter_Display_Key" xml:space="preserve">
    <value>Filtre OData</value>
    <comment>Texte d'affichage pour le Filter OData</comment>
  </data>
  <data name="filter_Desc_Key" xml:space="preserve">
    <value>Filtre OData utilisé pour ajouter un filtrage supplémentaire aux étiquettes</value>
    <comment>Texte d'affichage pour le Filter OData</comment>
  </data>
  <data name="remove" xml:space="preserve">
    <value>Supprimer</value>
    <comment>Texte d'affichage du bouton supprimer</comment>
  </data>
  <data name="noResultsFound" xml:space="preserve">
    <value>Aucun résultat</value>
    <comment>Texte d'affichage lorsque aucun résultat a été trouvé</comment>
  </data>
  <data name="tagPicker" xml:space="preserve">
    <value>Sélecteur d'étiquettes</value>
    <comment>Texte d'affichage du champ d'entrée de sélecteur d'étiquettes</comment>
  </data>
</root>