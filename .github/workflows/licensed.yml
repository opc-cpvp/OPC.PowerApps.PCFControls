name: Verify cached license metadata

on:
  # run on pushes to the default branch
  push:
    branches:
      - master
  # run on all pull request events
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  # run on demand
  workflow_dispatch:

jobs:
  licensed:
    runs-on: windows-latest

    steps:
      # checkout the repo
      - uses: actions/checkout@v3

      # install environment pre-requisites and project dependencies
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: microsoft/setup-msbuild@v1.3

      # install project dependencies
      - run: npm ci
        working-directory: ./src/Components/TagPickerComponent
      - run: npm ci
        working-directory: ./src/Components/TagPickerGridComponent
      - run: npm ci
        working-directory: ./src/Components/TaskManagerComponent
      - run: npm ci
        working-directory: ./src/Components/TreeComponent

      - run: msbuild OPC.PowerApps.PCFControls.sln /t:restore
        working-directory: ./src/Plugins

      # install licensed.  licensed v4 can only be installed as a gem and requires
      # running ruby/setup-ruby before github/setup-licensed.  If a project doesn't
      # require a specific version of ruby, default to installing latest stable
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby
      - uses: github/setup-licensed@v1
        with:
          version: 4.x

      # run licensed
      - uses: github/licensed-ci@v1
        with:
          # changes made using GITHUB_TOKEN will not re-trigger this action.
          # set a custom token so that added or changed cached license files
          # will cause this workflow to run and validate cached contents
          #
          # see https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
          # for additional details on GITHUB_TOKEN not re-triggering this action
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # the "push" workflow updates license metadata files on the branch being examined.
          # e.g. when the action is run on main, changes are pushed to main

          # the "branch" workflow creates a new branch for license file updates.
          # e.g. when the action is run on main, changes are pushed to a new "main-licenses" branch

          # see https://github.com/github/licensed-ci for more details
          workflow: branch
